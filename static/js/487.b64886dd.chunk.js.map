{"version":3,"file":"static/js/487.b64886dd.chunk.js","mappings":"qJACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,uBCGhL,MASA,EAToBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,UAC7CL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QACxB,ECAV,EALiBX,IACNG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAOE,SAAER,EAAMY,U,2CCC5C,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAfwBhB,IAEhBiB,EAAAA,EAAAA,MAAA,QAAMC,SAAUlB,EAAMmB,aAAaX,SAAA,EAC/BL,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAClBC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAK,iBAAiBc,YAAY,0BAEtCtB,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,gBCmBxB,EA7BiBR,IAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAAK5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACrB,KAAMoB,EAAEpB,KAAiBT,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,MAC1E+B,EAAmBP,EAAMQ,SAASJ,KAAIK,IAAKhC,EAAAA,EAAAA,KAACiC,EAAO,CAACxB,QAASuB,EAAEvB,SAAcuB,EAAEjC,MAC9DwB,EAAMW,eAM3B,OACIpB,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAEwB,QAAQrB,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEiC,aAAa9B,SAC1BoB,KAELzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE6B,SAAS1B,UACvBL,EAAAA,EAAAA,KAAA,OAAAK,SAAMyB,OAGV9B,EAAAA,EAAAA,KAACoC,EAAc,CAACrB,SAbHsB,IACjBxC,EAAMyC,YAAYD,EAAOH,eAAe,MAalC,E,wBCzBd,IAAIK,EAA8BhB,IAAK,CACnCiB,OAAQjB,EAAMkB,KAAKD,SCkBvB,SAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBmBpB,IACZ,CACHC,YAAaD,EAAMC,gBAIDoB,IACf,CACHN,YAAcJ,IACVU,GAASC,EAAAA,EAAAA,GAAmBX,GAAgB,ODTvBY,IAC7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAKrD,MAAM2C,QACTxC,EAAAA,EAAAA,KAAC8C,EAAS,IAAKI,KAAKrD,SADIG,EAAAA,EAAAA,KAACmD,EAAAA,GAAQ,CAAC5C,GAAG,SAAS6C,SAAS,GAElE,EAKJ,OAFqCT,EAAAA,EAAAA,IAAQJ,EAARI,CAAqCI,EAErC,GCKzC,CAGEM,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthNavigate.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__m1hUy\",\"dialogsItems\":\"Dialogs_dialogsItems__uQv-9\",\"active\":\"Dialogs_active__LXFGZ\",\"messages\":\"Dialogs_messages__Quu70\",\"message\":\"Dialogs_message__nz-Ew\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControl/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                validate={[required, maxLength50]}\r\n                name='newMessageBody' placeholder='Enter your message' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' replace={true} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate) (NavigateComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate\r\n)(Dialogs);"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","newMessageBody","dialogsItems","AddMessageForm","values","sendMessage","mapStateToPropsForNavigate","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","NavigateComponent","React","render","this","Navigate","replace","Dialogs"],"sourceRoot":""}