{"version":3,"file":"static/js/225.5cdaa370.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/Post/MyPosts.module.css?2eb0","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/MyPosts.jsx","components/Profile/MyPosts/Post/MyPosts.Container.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ys87p\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                            value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__4vVq0\",\"posts\":\"MyPosts_posts__ybFCy\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WRyZV\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://www.sunhome.ru/i/wallpapers/180/prekrasnaya-neitiri-avatar.orig.jpg'></img>\r\n            { props.message } {props.likesCounts}\r\n            <div>\r\n                <span>like</span>\r\n            </div>\r\n        </div>\r\n       \r\n     );\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators';\r\nimport { Textarea } from './../../../common/FormsControl/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n    [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} likesCounts={p.likesCount} />)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>);\r\n});\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer; ","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/Post/MyPosts.Container';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../Redux/profile-reducer';\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport  {useEffect} from 'react';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nfunction withRouter(ProfileContainer) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        useEffect(() => {\r\n            if (!props.isAuth) {\r\n                try {\r\n              navigate(\"/login\");\r\n                } catch(err) {\r\n                    console.log('err')\r\n                }\r\n            }\r\n          }, [props.isAuth, navigate]);\r\n        return (\r\n            <ProfileContainer\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n)(ProfileContainer);"],"names":["React","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","_ref","profile","className","s","src","photos","large","ProfileStatusWithHooks","Preloader","message","likesCounts","MyPosts","postsElements","posts","reverse","map","p","Post","likesCount","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","render","Profile","compose","auth","isAuth","location","useLocation","navigate","useNavigate","useParams","err","console","log"],"sourceRoot":""}